// note that since voice creation proceeds only from
// questions/index view, this operates on that view

console.log("Running create JS");

$("#notice").html("<%= notice %>");

// recreate the appropriate questions/choice_list with updated server data
$("#collapse<%= @panel_num_word %>").html("<%=escape_javascript(render(partial: 'questions/choice_list', locals: {question: @question, my_choice_ids: @my_choice_ids, num_word: @num_word})) %>");

//
// ISSUE: this method resets the state of the play/expanded button to its default,
// causing bad changes and wiggling
//
$("#buttons<%= @panel_num_word %>").html("<%=escape_javascript(render(partial: 'questions/q_button_pane', locals: {question: @question, my_choice_ids: @my_choice_ids, num_word: @num_word})) %>");

// Also re-render the stars header
// This is a simple operation and probably a good place to start
// when replacing tflickery 'rerender' methods with frontend animation
$("#stars-header").html("<%=escape_javascript(render(partial: 'questions/stars_header')) %>");

$("#my-cents").html("<%= current_user_auth.cents %>");

// defined in assets/javascripts/questions.coffee
// jQuery 'should' clean up the old elements and handlers in processing .html()
// TODO: possibly use a delegated handler to prevent this replacement
window.QuestionsJS.attachButtonPaneClickHandlers();

//Don't use this to remove the hidden class; since we're re-rendering
//the partial every time anyway, and we want questions already voiced
//to also be visible, it makes sense to render the field on the back end.
//But if we were doing it here, this would work.
//$("#collapse<%= @panel_num_word %> .voice-count-pane").removeClass('hidden');
